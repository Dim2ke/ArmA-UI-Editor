<Application x:Class="ArmA_UI_Editor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ArmA_UI_Editor"
             StartupUri="UI/SplashScreen.xaml"
             ShutdownMode="OnExplicitShutdown" DispatcherUnhandledException="Application_DispatcherUnhandledException"
             >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="Colors">
                    <SolidColorBrush x:Key="UIBackground" Color="#FF2D2D30"/>
                    <SolidColorBrush x:Key="UIBackgroundLight" Color="#FF3F3F46"/>
                    <SolidColorBrush x:Key="UIBackgroundDark" Color="#FF252526"/>
                    <SolidColorBrush x:Key="UIBackgroundDarker" Color="#FF1B1B1C"/>
                    <SolidColorBrush x:Key="UIBlue" Color="#FF0E97DD"/>
                    <SolidColorBrush x:Key="UIBlueDark" Color="#FF007ACC"/>
                    <SolidColorBrush x:Key="UIBlueLight" Color="#FF59A8DE"/>
                    <SolidColorBrush x:Key="DefaultTextColor" Color="#FFD0D0D0"/>
                </ResourceDictionary>
                <ResourceDictionary x:Name="GlobalStyles">
                    <Style TargetType="{x:Type GridSplitter}" x:Key="GridSplitterStyle">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource UIBackgroundLight}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type TabControl}" x:Key="TabControlStyle">
                        <Setter Property="Background" Value="{StaticResource UIBackgroundDark}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource UIBackgroundLight}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <ControlTemplate.Resources>
                                        <ResourceDictionary>
                                            <Style TargetType="{x:Type TabItem}">
                                                <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}"/>
                                                <Setter Property="Background" Value="Red"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                                            <Grid>
                                                                <Border Name="Border" Background="{StaticResource UIBackground}">
                                                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="5,2,5,2" RecognizesAccessKey="True"/>
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Panel.ZIndex" Value="100"/>
                                                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource UIBackgroundDark}"/>
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource UIBackgroundLight}"/>
                                                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,1" />
                                                                    <Setter Property="Foreground" Value="{StaticResource UIBlue}"/>
                                                                    <Setter Property="Margin" Value="0,-1,0,0"/>
                                                                    <Setter TargetName="Border" Property="Padding" Value="0,1,0,0"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ResourceDictionary>
                                    </ControlTemplate.Resources>
                                    <Grid KeyboardNavigation.TabNavigation="Local">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" x:Name="HeaderPanel" Grid.Row="1" Panel.ZIndex="1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Grid.Row="0" BorderThickness="1" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="Menu" x:Key="MenuStyle">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Background" Value="{StaticResource UIBackground}"/>
                        <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Menu">
                                    <ControlTemplate.Resources>
                                        <ResourceDictionary>
                                            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                                                <Setter Property="Height" Value="1"/>
                                                <Setter Property="Margin" Value="0,4,0,4"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Separator">
                                                            <Border BorderBrush="{StaticResource UIBackgroundLight}" BorderThickness="1"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                            <!-- TopLevelHeader -->
                                            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
                                                <Border Name="Border" >
                                                    <Grid>
                                                        <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
                                                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                                            <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource UIBackgroundDarker}">
                                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                            </Border>
                                                        </Popup>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted" Value="true">
                                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource UIBackgroundDarker}"/>
                                                        <Setter Property="Foreground" Value="{StaticResource UIBlue}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{StaticResource UIBackgroundLight}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                            <!-- TopLevelItem -->
                                            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
                                                <Border Name="Border" >
                                                    <Grid>
                                                        <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsHighlighted" Value="true">
                                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource UIBackground}"/>
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="Foreground" Value="{StaticResource UIBlue}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{StaticResource UIBackgroundLight}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                            <!-- SubmenuItem -->
                                            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
                                                <Border Name="Border" >
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                                            <ColumnDefinition Width="13"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                                                        <Border Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="{StaticResource UIBackgroundDarker}">
                                                            <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="{StaticResource UIBackgroundLight}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                                        </Border>
                                                        <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                                                        <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Icon" Value="{x:Null}">
                                                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="true">
                                                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="IsCheckable" Value="true">
                                                        <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                                                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted" Value="true">
                                                        <!--<Setter TargetName="Border" Property="Background" Value="{StaticResource UIBackground}"/>-->
                                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource UIBackgroundDark}"/>
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="Foreground" Value="{StaticResource UIBlue}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted" Value="false">
                                                        <!--<Setter TargetName="Border" Property="Background" Value="{StaticResource UIBackground}"/>-->
                                                        <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{StaticResource UIBackgroundLight}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                            <!-- SubmenuHeader -->
                                            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
                                                <Border Name="Border" >
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                                            <ColumnDefinition Width="13"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                                                        <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                                                        <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
                                                        <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource UIBackgroundLight}" />
                                                        <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                                            <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource UIBackgroundDark}" BorderBrush="{StaticResource UIBackgroundLight}" BorderThickness="1" >
                                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                            </Border>
                                                        </Popup>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Icon" Value="{x:Null}">
                                                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted" Value="true">
                                                        <!--<Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>-->
                                                        <Setter Property="Foreground" Value="{StaticResource UIBlue}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted" Value="false">
                                                        <!--<Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>-->
                                                        <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{StaticResource UIBackgroundLight}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                            <!-- MenuItem Style -->
                                            <Style TargetType="MenuItem">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Style.Triggers>
                                                    <Trigger Property="Role" Value="TopLevelHeader">
                                                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                                                        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                                                    </Trigger>
                                                    <Trigger Property="Role" Value="TopLevelItem">
                                                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                                                    </Trigger>
                                                    <Trigger Property="Role" Value="SubmenuHeader">
                                                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                                                    </Trigger>
                                                    <Trigger Property="Role" Value="SubmenuItem">
                                                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ResourceDictionary>
                                    </ControlTemplate.Resources>
                                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type ListBox}" x:Key="ListBoxStyle">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="{StaticResource UIBackgroundDark}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBox}">
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="true">
                                                        <Setter Property="Background" Value="{StaticResource UIBlue}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="BorderBrush" Value="#FF707070"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource UIBackgroundDarker}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource UIBackgroundLight}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource UIBackgroundDarker}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource UIBackgroundLight}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="#FFD6D6D6"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF818181"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
