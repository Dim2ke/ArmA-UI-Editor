using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Documents;

COMPILER CONFIGFILE
    public FlowDocument doc;
	public ConfigEntry Root;

    CHARACTERS
		DIGIT = "0123456789".
        HEXDIGIT = "0123456789ABCDEFabcdef".
		CHARACTER = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".
        ACHARACTER = "!|§$%&/*+-()=?`´#~ß}][{-_".
		OTHER = ANY - '/' - '*'. 
		STRINGCHARS = ANY - '\n' - '\r' - '"'.

	TOKENS
		T_SCALAR = [ '-' ] DIGIT { DIGIT } [ '.' DIGIT { DIGIT } ].
        T_HEX = ("0x" | "0X") HEXDIGIT { HEXDIGIT }.
		T_STRING = '"' { STRINGCHARS | "\"\""} '"'.
        T_STRINGTABLESTRING = '$' { CHARACTER | '_' | DIGIT }.
		T_IDENT = ( CHARACTER | '_' ) { CHARACTER | '_' | DIGIT }.
		
	COMMENTS FROM "/*" TO "*/" NESTED
	COMMENTS FROM "//" TO '\n'
	IGNORE '\t' + '\r' + '\n'
		
	PRODUCTIONS
		CONFIGFILE =
			CONFIG<Root>
            {
                CONFIG<Root>
            }
		.
        CONFIG<ConfigEntry parent> (. var cur = new ConfigEntry(parent); cur.IsField = true; .) =
            "class" (. cur.FullStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward); .)
            T_IDENT (.
				cur.NameStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward);
				cur.NameEnd = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward);
			.)
            [
                ':'
                T_IDENT (.
					cur.ParentStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward);
					cur.ParentEnd = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward);
				.)
            ]
            [
                '{' (. cur.ContentStart = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Forward); .)
                {
                    FIELD<cur>
                    |
                    CONFIG<cur>
                }
                '}' (. cur.ContentEnd = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Backward); .)
            ]
            ';' (. cur.FullEnd = cur.NameStart = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward); .)
        .
        FIELD<ConfigEntry parent> (. var cur = new ConfigEntry(parent); cur.IsField = true; .) =
            T_IDENT (.
				cur.FullStart = cur.NameStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward);
				cur.NameEnd = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward);
			.)
            [
                '['
                ']'
            ]
            '='
            (
                (
                    ARRAY (.
						cur.ContentStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward);
						cur.ContentEnd = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward);
					.)
                    |
                    SCALAR (.
						cur.ContentStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward);
						cur.ContentEnd = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward);
					.)
                    |
                    STRING (.
						cur.ContentStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward);
						cur.ContentEnd = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward);
					.)
                    |
                    BOOLEAN (.
						cur.ContentStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward);
						cur.ContentEnd = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward);
					.)
                    |
					(
						ANY (. cur.ContentStart = doc.ContentStart.GetPositionAtOffset(t.charPos, LogicalDirection.Forward); .)
						{
							ANY
						}
						(. cur.ContentEnd = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward); .)
					)
                )
            )
            ';' (. cur.FullEnd = cur.NameStart = doc.ContentStart.GetPositionAtOffset(t.charPos + t.val.Length, LogicalDirection.Backward); .)
        .
        SCALAR =
            T_SCALAR
            |
            T_HEX
        .
        STRING =
            (
                T_STRING
                |
                T_STRINGTABLESTRING
            )
        .
        BOOLEAN =
            (
                "true"
                |
                "false"
            )
        .
        ARRAY = 
            '{'
            (
                SCALAR
                |
                STRING
                |
                BOOLEAN
            )
            {
                ','
                (
                    SCALAR
                    |
                    STRING
                    |
                    BOOLEAN
                )
            }
            '}'
        .
END CONFIGFILE.